// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  slug      String   @unique
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  users     User[]
  deals     Deal[]
  clients   Client[]
  tasks     Task[]
  documents Document[]
}

model User {
  id             String   @id
  name           String
  email          String   @unique
  imageUrl       String?
  role           String   @default("member") // admin, member
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  
  assignedTasks  Task[]
  
  @@index([organizationId])
}

model Deal {
  id          String   @id @default(cuid())
  title       String
  description String?
  value       Float?
  stage       String   // lead, negotiation, proposal, won, lost
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  
  clientId    String?
  client      Client?  @relation(fields: [clientId], references: [id], onDelete: SetNull)
  
  tasks       Task[]
  documents   Document[]
  
  @@index([organizationId])
  @@index([clientId])
}

model Client {
  id          String   @id @default(cuid())
  name        String
  email       String?
  phone       String?
  company     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  
  deals       Deal[]
  documents   Document[]
  
  @@index([organizationId])
}

model Task {
  id          String   @id @default(cuid())
  title       String
  description String?
  status      String   // todo, in-progress, done
  dueDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  
  assigneeId  String?
  assignee    User?    @relation(fields: [assigneeId], references: [id], onDelete: SetNull)
  
  dealId      String?
  deal        Deal?    @relation(fields: [dealId], references: [id], onDelete: SetNull)
  
  @@index([organizationId])
  @@index([assigneeId])
  @@index([dealId])
}

model Document {
  id          String   @id @default(cuid())
  title       String
  url         String
  type        String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  organizationId String
  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  
  dealId      String?
  deal        Deal?    @relation(fields: [dealId], references: [id], onDelete: SetNull)
  
  clientId    String?
  client      Client?  @relation(fields: [clientId], references: [id], onDelete: SetNull)
  
  @@index([organizationId])
  @@index([dealId])
  @@index([clientId])
}